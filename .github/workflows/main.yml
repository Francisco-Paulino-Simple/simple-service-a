name: CI/CD para Servico A

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ghcr.io/francisco-paulino-simple/simple-service-a
  INFRA_REPO_URL: https://github.com/francisco-saulino-simple/ci-cd-infra.git

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4
      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_ORG_USER }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy na VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # --- PASSO ADICIONADO ---
            # Loga o Docker da VPS no GitHub Container Registry.
            # O --password-stdin é a forma mais segura de passar o token.
            echo ${{ secrets.DOCKER_PAT }} | docker login ghcr.io -u ${{ secrets.DOCKER_ORG_USER }} --password-stdin
            # --- FIM DA ADIÇÃO ---

            # O resto do script continua o mesmo
            INFRA_DIR="/home/deployer/ci-cd-infra"
            
            if [ -d "$INFRA_DIR" ]; then
              cd "$INFRA_DIR"
              git pull
            else
              git clone ${{ env.INFRA_REPO_URL }} "$INFRA_DIR"
              cd "$INFRA_DIR"
            fi
            
            echo "Atualizando o Serviço..."
            # Para o service-a, use 'service-a'. Para o service-b, use 'service-b'.
            docker compose up -d service-a
            
            docker image prune -af